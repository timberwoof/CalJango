CalJango Notes

Python version installed
Timberden:~ timberwoof$ python --version
Python 2.7.12

https://docs.djangoproject.com/en/1.11/faq/install/#faq-python-version-support
says Django 1.11 supports Python 2.7, 3.4, 3.5, 3.6

If you’re starting a new project, and the dependencies you plan to use work on Python 3, you should use Python 3. If they don’t, consider contributing to the porting efforts, or stick to Python 2.

So upgrade python to latest. 

https://www.macobserver.com/tmo/article/how-to-upgrade-your-mac-to-python-3

Download Python 3.4.1

Fix the fucking TextEdit problem. 1/2 hour on this fucking problem.
sudo codesign -f -s - /Applications/TextEdit.app/
not permitted

rm -rf ~/Library/Autosave\ Information/
Doesn't fucking work. 

sudo diskutil repairPermissions /
Doesn't work any more

rm ~/Library/Preferences/com.apple.TextEdit.LSSharedFileList.plist
Didn't solve the problem

https://www.python.org/downloads/

Timberden:~ timberwoof$ python3
Python 3.6.1 (v3.6.1:69c0db5050, Mar 21 2017, 01:21:04) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin


Install jango
pip install Django==1.11.2


Successfully installed Django-1.11.2 pytz-2017.2
You are using pip version 8.1.2, however version 9.0.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
Timberden:~ timberwoof$ 
FUCK ME!
Which will not care until the next time I use pip, by which time this version will be out of date. 


https://docs.djangoproject.com/en/1.11/intro/install/

set up a database. 
mysql is installed - uninstalled. 

https://docs.djangoproject.com/en/1.11/topics/install/#database-installation
SQLite or PostgreSQL or MySQL? 

SQLite
https://www.sqlite.org/download.html

https://docs.djangoproject.com/en/1.11/ref/databases/#sqlite-notes

20160604==============

cd mysite
python manage.py runserver
http://127.0.0.1:8000
It worked!
Congratulations on your first Django-powered page.
python manage.py startapp calendar
CommandError: 'calendar' conflicts with the name of an existing Python module and cannot be used as an app name. Please try another name.

python manage.py startapp zulucal
works

database setup ... settings.py is already set up for sqlite3

********* Migration Process: ***********
python manage.py makemigrations zulucal
python manage.py sqlmigrate zulucal 0003 --- needs to be incremented every time
python manage.py migrate
python manage.py runserver


Models are substantially set up.
They relate to each other reasonably well.
Some of the fields show up in the admin site.
• Need to make special views so the objects will be fully editable.

CalendarList
CalendarDetail

personList
personDetail

placeList
placeDetail

thingList
thingDetail

eventList
eventDetail

eventRelationList
eventRelationDetail

URLS
/zulucal/
/zulucal/calendars/
/zulucal/calendars/5/
/zulucal/persons/
/zulucal/persons/5/
/zulucal/places/
/zulucal/places5/
/zulucal/events/
/zulucal/events/5/
/zulucal/relations/
/zulucal/relations/5/
============
20171128

Need to get some standard toys for showing basic fieldlike things. 

https://docs.djangoproject.com/en/1.11/topics/templates/
https://www.wired.com/2010/02/use_templates_in_django/
https://docs.djangoproject.com/en/dev/ref/templates/builtins/
https://tutorial.djangogirls.org/en/django_templates/


Django Views
*****
https://docs.djangoproject.com/en/1.11/topics/class-based-views/generic-display/
https://docs.djangoproject.com/en/1.11/ref/class-based-views/

ListView
DetailView
FormView
CreateView
UpdateView
DeleteView

======
2018-03-10

cd /Users/timberwoof/Dev/CalJango/mysite
python manage.py runserver

http://127.0.0.1:8000/admin/login/?next=/admin/zulucal/

Calendars
Event relations
Events
Persons
Places
Things

Calendars have
Name
Description
BaseCalendar
** Need date in base calendar

Things have
name
description
Panoculus page


Persons have
name
description
Panoculus page


Places have
name
description
Panoculus page


Events have
Calendar (1 is ok)
Person (needs more than one!)
Place (needs 1)
Thing (needs more than one!)
Description (1 is ok)
URL (1 is ok)
earliest, latest, pinned


Event Relations
First Event
Second Event
intervalMin
intervalMax

======
Needs identified
• calendars need dates in base calendar - calendarOffset
• events need more than one person, more than one thing,  possibly more than one place
• events need to let user edit earliest, latest, pinned

• event relations need to let user edit min, max time between

——
After reinstall the OS on the lappy. 
Does this editor still cry about permissions? Yes
    
Edit edit edit d
more edit save
===========
2018-05-12 status
Django home page has admin stuff

Zulucal Administration has
Calendars
Event Relations
Events
Persons
Places
Things

Each of these has a page that lets you add or delete objects, or open an edit window into a thing. 
The database is there and persistent. 
There is a Git repository, not connected to anything. 
• need to link this to my github. 

• need to calculate crap
• need to display calendar


Event: calendar, person, place, thing, description, link

Event: person, place, thing are not required. Use Nobody, Nowhere, Nothing

*** event names are not right: need to add the thing
use with and at
of "nothing" then omit the thing
person (NOODY)
place (NOWHERE)
thing (NOTHING)
description
-- added better def __str__(self): function 


*** Event Relationships only have first and second event. 
Need before/after and duration range 
---the fields are there but donw't show up

event relationship names kind of suck
--- fixed names

====
migrations
$ python manage.py makemigrations zulucal
did not change the fields. 

I changed the URLS in the default URL fields, then tan 
$ python manage.py makemigrations zulucal
This results in migration 8
$ python manage.py sqlmigrate zulucal 0008
$ python manage.py migrate
$ python manage.py runserver
... worked

So force the change. 
Comment out the fields I want to change, and migrate 

$ python manage.py makemigrations zulucal
no changes detected! WTFF
That's upgefucked

Changed names of fields to fieldDammit
run migration again
no changes detected! WTFF
That's upgefucked!

https://stackoverflow.com/questions/37370660/makemigrations-doesnt-detect-changes-in-model
suggests
$ python manage.py makemigrations zulucal --initial

lotta help that is! 
Timberden:mysite timberwoof$ python manage.py makemigrations zulucal --initial
usage: manage.py makemigrations [-h] [--version] [-v {0,1,2,3}]
                                [--settings SETTINGS]
                                [--pythonpath PYTHONPATH] [--traceback]
                                [--no-color] [--dry-run] [--merge] [--empty]
                                [--noinput] [-n NAME] [-e] [--check]
                                [app_label [app_label ...]]
manage.py makemigrations: error: unrecognized arguments: --initial




https://stackoverflow.com/questions/32518804/django-makemigrations-not-detecting-new-model

You have to run python manage.py makemigrations first, 
Second, you have to run python manage.py migrate to sync db.

Well, I did. It does not work. 


added 
from .models import Calendar, Person, Place, Thing, Event, EventRelation
to __init__.py and got lovely error: 
django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.
Well, that's stupid

code was
    earliest = models.IntegerField
    latest = models.IntegerField
    pinned = models.BooleanField
hanged to
    earliest = models.IntegerField()
    latest = models.IntegerField()
    pinned = models.BooleanField()
which complained nicely about no init values
Taht worked and created migration 9

$ python manage.py sqlmigrate zulucal 0009
$ python manage.py migrate
$ python manage.py runserver

works! 

I entered about half the calendar that's on google docs. 

TO DO 
-- calculate the whole calendar
-- detect and flag errors
-- display the calendar (list events in order with some kind of earliest-latest bars)
1. simple text-only calendar
2. pretty graphics calendar with html graphics? 

••• any time there's a change to an event or to an event relation, recalculate starting at the the changed record. 

https://docs.djangoproject.com/en/2.0/topics/db/queries/



event
	calendar (offset from base)
	person (text)
	place (text)
	thing (text)
	description (text)
	url (text)
	earliest (integer) - input or output of calculation
	latest (integer) - input or output of calculation
	pinned (boolean) - if TRUE, earliest and latest are inputs
	- if FALSE, earliest and latest are results of calculations

eventRelation
	firstEvent (link to event)
	secondEvent (link to event)
	intervalMin (integer) - minimum detaT from first to second
	intervalMax (integer) - maximum detaT from first to second

••• add "recalculated" field to every non-pinned event


follows only a start at the calculation algorithm

Calculate all of them: 
for every pinned event
	for every previous-linked event
		pinnedEarliest - intervalMin
		pinnedLatest - intervalMin
		pinnedEarliest - intervalMax
		pinnedLatest - intervalMax
		-> min is newEarliest
		-> max is newLatest
		assert min <= max
		if previous-linked event is pinned:
			assert newEarliest >= previous.earliest 
			assert newEarliest <= previous.latest
			assert newLatest => previous.earliest
			assert newLatest <= previous.latest
		else 
			previous.earliest = newEarliest 
			previous.latest = newLatest
		set recalculated = true

	for every after-linked event
		pinnedEarliest + intervalMin
		pinnedLatest + intervalMin
		pinnedEarliest + intervalMax
		pinnedLatest + intervalMax
		-> min is newEarliest
		-> max is newLatest
		assert min <= max
		if after-linked event is pinned:
			assert newEarliest => after.earliest 
			assert newEarliest <= after.latest
			assert newLatest => after.earliest
			assert newLatest <= after.latest
		else 
			after.earliest = newEarliest 
			after.latest = newLatest
		set recalculated = true

for every non-pinned event where recalculated == false

The problem is that multiple events linked to this event may combine to determine its date and every influencing date needs to be calculated. 
Use the recalculated field to determine this. 
***Recursive descent into this crazy tree!***
I can set the dates of this event only when all linked events are calculated. 
There may be circular dependencies. 
Circular dependencies may appear and disappear based on relative dates. 

Calculate ONE event: 
For every previous-linked event: 
	If it is not pinned or calculated:
		calculate it.
	Get its earliest and latest dates, 
	combine with the link min and max intervals,
	and constrain this event's dates. 
For every subsequent-linked event: 
	If it is not pinned or calculated:
		calculate it.
	Get its earliest and latest dates, 
	combine with the link min and max intervals,
	and constrain this event's dates. 
mark this event calculated

Select pinned events sort by date:
for every event
	calculate it


django urlserver

^CTimberden:mysite timberwoof$ pwd
/Users/timberwoof/Dev/CalJango/mysite
Timberden:mysite timberwoof$ python manage.py runserver

nothing in manage.py obviously connects it to anything else

http://127.0.0.1:8000/
causes error. 

simplest defined url is
http://127.0.0.1:8000/admin/
http://127.0.0.1:8000/zulcal/

http://127.0.0.1:8000/admin/
gives Django Administration. Site Administration. Authentication and Authorization. Zulucal. 

http://127.0.0.1:8000/admin/zulucal/
gives Zulucal Administration. Zulucal. and all the objects, whose urls look like
http://127.0.0.1:8000/admin/zulucal/calendar/

http://127.0.0.1:8000/zulucal/
Hello, world. You're at the zulucal index.


mysite/zulucal/admin.py registers all the object types
mysite/zulucal/apps.py registers zulucal
mysite/zulucal/models.py defines the object models
mysite/zulucal/tests.py defines the tests, but there aren't any. 
mysite/zulucal/urls.py defines a bunch of stuff but all of it causes errors 
	Using the URLconf defined in mysite.urls
mysite/zulucal/views.py defines some stuff that's not accessed

mysite/urls.py has two urlpatterns
	zulucal/, include zulucal.urls
	admin/, include admin.sire.urls

http://127.0.0.1:8000/zulucal/events/5/
You're looking at event 5.

Aha!
so I need to make a thing that just displays these? 
But I don't care. I just need
recalculate
and 
display

https://docs.djangoproject.com/en/2.0/topics/http/urls/

https://docs.djangoproject.com/en/2.0/topics/db/queries/
=========
May 2020 iMac
1. reset python to run python 3

$ cd /usr/local/bin/
Timberwoofs-iMac:bin timberwoof$ ls -la python
lrwxr-xr-x  1 timberwoof  admin  38 Jan 20  2019 python -> ../Cellar/python@2/2.7.15_2/bin/python

$ which python3
/Library/Frameworks/Python.framework/Versions/3.6/bin/python3

$ rm python

$ ln -s /Library/Frameworks/Python.framework/Versions/3.6/bin/python3 python

$ which python
/usr/local/bin/python

$ python --version
Python 3.6.1

$ cd /Users/timberwoof/Dev/git/CalJango/mysite

$ python manage.py runserver
ModuleNotFoundError: No module named 'django'

Install django
$ pip install Django==1.11.2 -- but is that the latest version? 
https://www.djangoproject.com/download/
pip install Django==3.0.6

"You don’t have permission to write to the folder that the file “CalJango Notes.txt” is in."
Goddammit. 

$ pip install Django==3.0.6
Collecting Django==3.0.6
  Could not find a version that satisfies the requirement Django==3.0.6 (from versions: 1.1.3, 1.1.4, 1.2, 1.2.1, 1.2.2, 1.2.3, 1.2.4, 1.2.5, 1.2.6, 1.2.7, 1.3, 1.3.1, 1.3.2, 1.3.3, 1.3.4, 1.3.5, 1.3.6, 1.3.7, 1.4, 1.4.1, 1.4.2, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 1.4.7, 1.4.8, 1.4.9, 1.4.10, 1.4.11, 1.4.12, 1.4.13, 1.4.14, 1.4.15, 1.4.16, 1.4.17, 1.4.18, 1.4.19, 1.4.20, 1.4.21, 1.4.22, 1.5, 1.5.1, 1.5.2, 1.5.3, 1.5.4, 1.5.5, 1.5.6, 1.5.7, 1.5.8, 1.5.9, 1.5.10, 1.5.11, 1.5.12, 1.6, 1.6.1, 1.6.2, 1.6.3, 1.6.4, 1.6.5, 1.6.6, 1.6.7, 1.6.8, 1.6.9, 1.6.10, 1.6.11, 1.7, 1.7.1, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.7.6, 1.7.7, 1.7.8, 1.7.9, 1.7.10, 1.7.11, 1.8a1, 1.8b1, 1.8b2, 1.8rc1, 1.8, 1.8.1, 1.8.2, 1.8.3, 1.8.4, 1.8.5, 1.8.6, 1.8.7, 1.8.8, 1.8.9, 1.8.10, 1.8.11, 1.8.12, 1.8.13, 1.8.14, 1.8.15, 1.8.16, 1.8.17, 1.8.18, 1.8.19, 1.9a1, 1.9b1, 1.9rc1, 1.9rc2, 1.9, 1.9.1, 1.9.2, 1.9.3, 1.9.4, 1.9.5, 1.9.6, 1.9.7, 1.9.8, 1.9.9, 1.9.10, 1.9.11, 1.9.12, 1.9.13, 1.10a1, 1.10b1, 1.10rc1, 1.10, 1.10.1, 1.10.2, 1.10.3, 1.10.4, 1.10.5, 1.10.6, 1.10.7, 1.10.8, 1.11a1, 1.11b1, 1.11rc1, 1.11, 1.11.1, 1.11.2, 1.11.3, 1.11.4, 1.11.5, 1.11.6, 1.11.7, 1.11.8, 1.11.9, 1.11.10, 1.11.11, 1.11.12, 1.11.13, 1.11.14, 1.11.15, 1.11.16, 1.11.17, 1.11.18, 1.11.20, 1.11.21, 1.11.22, 1.11.23, 1.11.24, 1.11.25, 1.11.26, 1.11.27, 1.11.28, 1.11.29)
No matching distribution found for Django==3.0.6
Goddammit. So fuck you. 

$ pip install Django==1.11.28
Successfully installed Django-1.11.28 pytz-2020.1

$ python manage.py runserver
ModuleNotFoundError: No module named 'django'
Are you sure it's installed and available on your PYTHONPATH environment variable?

Okay. Isn't pip supposed to do that? Where's django installed? I realy fucking hate pip. I run it rarely and every fucking time I run it--every fucking time!--there's a problem. 

$ echo $PYTHONPATH

export PYTHONPATH="/Users/timberwoof/code

$ source ~/.bash_profile

typical python path
/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages

/Library/Frameworks/Python.framework/Versions/3.6/bin/python3

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages

I don't know where django got installed
pip told me when I tred installing again
/usr/local/lib/python2.7/site-packages
thanks so much
what good is that? 

python3.4 -m pip install SomePackage  # specifically Python 3.4

$ python --version
Python 3.6.1

$ python3.6 -m pip install Django==1.11.28
failed. 
You are using pip version 9.0.1, however version 20.1.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.

$ pip install --upgrade pip

That broke. 

$ python3.6 -m pip --version
pip 9.0.1 from /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages (python 3.6)

Okay. So fucking upgrade youself. 

$ python3.6 -m pip install --upgrade pip
Permission denied

sudo pip install --upgrade pip

Successfully installed pip-20.1.1

okay. Now django
but which version runs when I just rin pip? 

$ pip --version
pip 20.1.1 from /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pip (python 2.7)
That's an interesting result. 

$ pip install Django==1.11.28
Requirement already satisfied: Django==1.11.28 in /usr/local/lib/python2.7/site-packages (1.11.28

$ python3.6 -m pip install Django==1.11.28
WARNING: The script django-admin is installed in '/Users/timberwoof/Library/Python/3.6/bin' which is not on PATH.
Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.

edit config
/Users/timberwoof/Library/Python/3.6/bin

was
PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
chaned to
PATH="/Users/timberwoof/Library/Python/3.6/bin:${PATH}

okay. 

$ python manage.py runserver
success!
Good failure. The server is there but it reports 404

$ python manage.py startapp zulucal
CommandError: 'zulucal' conflicts with the name of an existing Python module and cannot be used as an app name. Please try another name.

$ python manage.py startapp mysite
CommandError: 'mysite' conflicts with the name of an existing Python module and cannot be used as an app name. Please try another name.

$ python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).
May 19, 2020 - 11:54:37
Django version 1.11.28, using settings 'mysite.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.

===
a Django project is a container for applications

$ django-admin.py startproject Project
cd Project
python manage.py startapp polls

django-admin startapp

Creates a Django app directory structure for the given app name in the current directory or the given destination.
Okay, then, Instesd of sending me to other dense docs that the OP read and couldn't figure out, how do I start it? 

/Users/timberwoof/Dev/git/CalJango/mysite$ python manage.py runserver
mysite.settings

zulucal hasn't got a settings file


http://127.0.0.1:8000/admin/
log in to timberwoof

Need to create a user name

Please enter the correct username and password for a staff account. Note that both fields may be case-sensitive.

This problem may be related to the Authentication Backends. Please check your settings files for the AUTHENTICATION_BACKENDS parameter.

Try the following value:

AUTHENTICATION_BACKENDS = (
    ('django.contrib.auth.backends.ModelBackend'),
)

made no difference. Did I have it in the right plavce? 


0

You can do the following:

Enter your mysql (or other database console)
USE YourDATABASE;
SELECT * from auth_user;
watch is_staff and is_superuser item
UPDATE auth_user SET is_staff = "1" where username = "root";

---
python manage.py createsuperuser
timber
timber@timberwoof.com
shep8765herd
yay

And there's all kinds of studff here. 

This is all site admin. 
I need better list/detail views
------

Event
	calendar
	person
	place
	thing
	description
	panoculus
	earliest
	latest

Person
	name
	description
	panoculus

Place
	name
	descripiton
	panoculus

Thing
	name
	description
	panoculus

Event-Relation
	first event
	second event
	interval min
	interval max

Django Packages
Data Tools - kind of dumb
Layout 
what the fuck. Nothing in the way of records managers or searches for picking things
Lots of little toys but no basics. 
Things named "Seampdragin" with the description "swampdragon". You stupid fuck. How is anyone supposed to know what your clever-clever swampdragon does? 

Useless-to-me-crap badly sorted. You have to know everytin gto kn ow anyrhing


Packages are organized inti
	Apps
	Frameworks
	Projects
	Other
none of whcih is in the leats decriptive
I'm goimg to ditch django. 
Django does not do for me antyhing but complificate my project. 
-------
20 best alternatives to django. 
Not just 20 alternatives, but 20 BEST alternati8ves. 

FastAPI
Ruby on Rails. Fuck you. I said "Python" alternatives. 


Web2Py

Python Web Frameworks is what I am looking for

Flask - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions

http://www.web2py.com/init/default/what
web2py - Free open source full-stack framework for rapid development of fast, scalable, secure and portable database-driven web-based applications. Written and programmable in Python
Model View Controller
comprehensive web-based administrative interface
generate forms from database tables 
more compact, easier to learn than django and does not have any project-level configuration files




